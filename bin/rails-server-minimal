#!/usr/bin/env bash
# A minimal script to start the Rails server with all components

# Function to log messages with timestamps
log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# Start PostgreSQL if it's not running
log "Checking PostgreSQL status..."
if ! pg_isready -q; then
  log "Starting PostgreSQL..."
  brew services start postgresql@14
  sleep 5
  
  # Check again
  if ! pg_isready -q; then
    log "ERROR: Failed to start PostgreSQL. Please start it manually."
    exit 1
  fi
  
  log "PostgreSQL started successfully."
else
  log "PostgreSQL is already running."
fi

# Start Redis if it's not running
log "Checking Redis status..."
if ! redis-cli ping > /dev/null 2>&1; then
  log "Starting Redis..."
  brew services start redis
  sleep 3
  
  # Check again
  if ! redis-cli ping > /dev/null 2>&1; then
    log "ERROR: Failed to start Redis. Please start it manually."
    exit 1
  fi
  
  log "Redis started successfully."
else
  log "Redis is already running."
fi

# Kill any existing SolidQueue processes
log "Checking for existing SolidQueue processes..."
pkill_output=$(pgrep -f "solid_queue_monitor.rb" || echo "")
if [ -n "$pkill_output" ]; then
  log "Killing existing SolidQueue processes: $pkill_output"
  pkill -f solid_queue_monitor.rb
  sleep 2
  
  # Double-check that processes are actually killed
  pkill_output=$(pgrep -f "solid_queue_monitor.rb" || echo "")
  if [ -n "$pkill_output" ]; then
    log "Forcefully killing remaining processes: $pkill_output"
    pkill -9 -f solid_queue_monitor.rb
    sleep 1
  fi
fi

# Clean up any stale PID files
log "Cleaning up stale PID files..."
find tmp/pids -name "*.pid" -delete 2>/dev/null || true
find tmp/pids -name "*.lock" -delete 2>/dev/null || true

# Start the Rails server
log "Starting Rails server..."
exec bundle exec rails server "$@"
