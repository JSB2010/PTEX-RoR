#!/usr/bin/env ruby
# SolidQueue status script

require_relative '../config/environment'

# Show status of SolidQueue processes
processes = SolidQueue::Process.all
puts "\nSolidQueue Status:"
puts "==================="
puts "Total Processes: #{processes.count}"
puts "Active Processes: #{processes.where('last_heartbeat_at > ?', 30.seconds.ago).count}"
puts "Total Jobs: #{SolidQueue::Job.count}"
puts "Ready Jobs: #{SolidQueue::ReadyExecution.count}"
puts "Running Jobs: #{SolidQueue::ClaimedExecution.count}"
puts "Failed Jobs: #{SolidQueue::FailedExecution.count}"
puts "Scheduled Jobs: #{SolidQueue::ScheduledExecution.count}"
puts "\nProcess Details:"
processes.each do |process|
  status = process.alive? ? "ALIVE" : "DEAD"
  puts "#{process.name} (#{process.kind}) - PID: #{process.pid} - Status: #{status}"
end

# Check if our direct worker is running
pid_file = Rails.root.join('tmp', 'pids', 'solid_queue.pid')
puts "\nDirect Worker Status:"
if File.exist?(pid_file)
  pid = File.read(pid_file).strip
  running = system("ps -p #{pid} > /dev/null 2>&1")
  puts "PID: #{pid} - Status: #{running ? 'RUNNING' : 'NOT RUNNING'}"
else
  puts "No PID file found"
  # Try to find the process anyway
  other_pids = `pgrep -f "ruby.*direct_solid_queue_worker"`.strip.split("\n")
  if other_pids.any?
    puts "Found #{other_pids.size} direct worker processes running:"
    other_pids.each do |pid|
      puts "  PID: #{pid}"
    end
  else
    puts "No direct worker processes found"
  end
end