#!/usr/bin/env ruby
# Script to register fake SolidQueue processes in the database

require 'fileutils'
require 'socket'

# Change to the Rails root directory
app_root = File.expand_path('..', __dir__)
Dir.chdir(app_root)

puts "Registering fake SolidQueue processes in the database..."

# Load Rails environment
require File.join(app_root, 'config', 'environment')

# Clean up any existing processes from this host
if defined?(SolidQueue::Process) && ActiveRecord::Base.connection.table_exists?('solid_queue_processes')
  hostname = Socket.gethostname
  puts "Cleaning up existing SolidQueue processes for host: #{hostname}"
  SolidQueue::Process.where(hostname: hostname).destroy_all
end

# Register a fake dispatcher process
puts "Registering a fake dispatcher process"
dispatcher = SolidQueue::Process.create!(
  kind: "Dispatcher",
  name: "dispatcher-#{Socket.gethostname}",
  pid: Process.pid,
  hostname: Socket.gethostname,
  last_heartbeat_at: Time.current,
  metadata: { polling_interval: 5 }.to_json
)
puts "Registered fake dispatcher process with ID: #{dispatcher.id}"

# Register a fake worker process
puts "Registering a fake worker process"
worker = SolidQueue::Process.create!(
  kind: "Worker",
  name: "worker-#{Socket.gethostname}",
  pid: Process.pid + 1,
  hostname: Socket.gethostname,
  last_heartbeat_at: Time.current,
  metadata: { concurrency: 1, queues: ["default"] }.to_json
)
puts "Registered fake worker process with ID: #{worker.id}"

# Start a heartbeat thread
puts "Starting heartbeat thread..."
Thread.new do
  loop do
    begin
      dispatcher.update!(last_heartbeat_at: Time.current)
      worker.update!(last_heartbeat_at: Time.current)
      puts "Updated heartbeats at #{Time.current}"
      sleep 15
    rescue => e
      puts "Error updating heartbeats: #{e.message}"
      break
    end
  end
end

puts "Fake SolidQueue processes registered. Press Ctrl+C to exit."
sleep
