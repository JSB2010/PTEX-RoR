#!/usr/bin/env ruby
# Direct Rails server script that avoids recursion

require 'fileutils'

# Change to the Rails root directory
app_root = File.expand_path('..', __dir__)
Dir.chdir(app_root)

# Create necessary directories
FileUtils.mkdir_p('tmp/pids')
FileUtils.mkdir_p('log')

# Clean up any existing SolidQueue processes
puts "Cleaning up SolidQueue processes..."
system('pkill -f "SolidQueue::Dispatcher" 2>/dev/null || true')
system('pkill -f "SolidQueue::Worker" 2>/dev/null || true')

# Start PostgreSQL if it's not running
unless system('pg_isready -q')
  puts "Starting PostgreSQL..."
  system('brew services start postgresql@14')
  sleep 3
end

# Start Redis if it's not running
unless system('redis-cli ping > /dev/null 2>&1')
  puts "Starting Redis..."
  system('brew services start redis')
  sleep 2
end

# Start SolidQueue
puts "Starting SolidQueue..."
dispatcher_pid = Process.spawn(
  "bundle exec rails runner \"SolidQueue::Dispatcher.new(concurrency: 1, polling_interval: 5).start\"",
  out: File.join(app_root, 'log', 'solid_queue_dispatcher.log'),
  err: File.join(app_root, 'log', 'solid_queue_dispatcher.log')
)
Process.detach(dispatcher_pid)
puts "SolidQueue dispatcher started with PID: #{dispatcher_pid}"

worker_pid = Process.spawn(
  "bundle exec rails runner \"SolidQueue::Worker.new(concurrency: 1).start\"",
  out: File.join(app_root, 'log', 'solid_queue_worker.log'),
  err: File.join(app_root, 'log', 'solid_queue_worker.log')
)
Process.detach(worker_pid)
puts "SolidQueue worker started with PID: #{worker_pid}"

# Start the Rails server directly
puts "Starting Rails server..."
exec "bundle exec rails server"
