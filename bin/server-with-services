#!/usr/bin/env bash
# Start the Rails server with all necessary services

# Start PostgreSQL if it's not running
if ! pg_isready -q; then
  echo "Starting PostgreSQL..."
  brew services start postgresql@14
  sleep 3
fi

# Start Redis if it's not running
if ! redis-cli ping > /dev/null 2>&1; then
  echo "Starting Redis..."
  brew services start redis
  sleep 2
fi

# Clean up log files if they're too large
echo "Checking log files..."
for log_file in log/*.log; do
  if [ -f "$log_file" ]; then
    size=$(du -m "$log_file" 2>/dev/null | cut -f1) || size=0
    if [ "$size" -gt 10 ]; then
      echo "Cleaning up large log file: $log_file ($size MB)"
      cat /dev/null > "$log_file" 2>/dev/null || echo "Failed to clean $log_file"
    fi
  fi
done

# Kill any existing SolidQueue processes
pkill_output=$(pgrep -f "solid_queue_monitor.rb" || echo "")
if [ -n "$pkill_output" ]; then
  echo "Killing existing SolidQueue processes: $pkill_output"
  pkill -f solid_queue_monitor.rb
  sleep 2
  
  # Double-check that processes are actually killed
  pkill_output=$(pgrep -f "solid_queue_monitor.rb" || echo "")
  if [ -n "$pkill_output" ]; then
    echo "Forcefully killing remaining processes: $pkill_output"
    pkill -9 -f solid_queue_monitor.rb
    sleep 1
  fi
fi

# Clean up any stale PID files
echo "Cleaning up stale PID files..."
find tmp/pids -name "*.pid" -delete 2>/dev/null || true
find tmp/pids -name "*.lock" -delete 2>/dev/null || true

# Start SolidQueue
echo "Starting SolidQueue..."
bin/rails runner "begin; SolidQueue::Process.where(hostname: Socket.gethostname).destroy_all; rescue => e; puts \"Error cleaning up stale processes: #{e.message}\"; end"
nohup ruby bin/solid_queue_monitor.rb >> log/solid_queue_monitor.log 2>&1 &
SOLID_QUEUE_PID=$!
echo $SOLID_QUEUE_PID > tmp/pids/solid_queue_monitor.pid
echo "SolidQueue started with PID: $SOLID_QUEUE_PID"

# Start the Rails server
echo "Starting Rails server..."
exec bin/rails server "$@"
