#!/usr/bin/env bash

# Health check script for the Rails application

# Change to the Rails root directory
cd "$(dirname "$0")/.." || exit 1

# Function to log messages with timestamps
log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# Function to check a service
check_service() {
  local service_name=$1
  local check_command=$2
  
  log "Checking $service_name..."
  if eval "$check_command"; then
    log "✅ $service_name is running."
    return 0
  else
    log "❌ $service_name is NOT running."
    return 1
  fi
}

# Check PostgreSQL
check_service "PostgreSQL" "pg_isready -q"
pg_status=$?

# Check Redis
check_service "Redis" "redis-cli ping > /dev/null 2>&1"
redis_status=$?

# Check Rails server
log "Checking Rails server..."
if curl -s http://localhost:3000/health > /dev/null 2>&1; then
  log "✅ Rails server is running."
  rails_status=0
else
  log "❌ Rails server is NOT running."
  rails_status=1
fi

# Check SolidQueue
log "Checking SolidQueue..."
if ps aux | grep -v grep | grep -q "SolidQueue"; then
  log "✅ SolidQueue processes are running."
  solid_queue_status=0
else
  log "❌ SolidQueue processes are NOT running."
  solid_queue_status=1
fi

# Check health endpoint
if [ $rails_status -eq 0 ]; then
  log "Checking health endpoint..."
  health_response=$(curl -s http://localhost:3000/health)
  
  # Check if the response contains "status": "ok"
  if echo "$health_response" | grep -q '"status":"ok"'; then
    log "✅ Health endpoint reports OK status."
    health_status=0
  else
    log "❌ Health endpoint reports issues."
    log "Health response: $health_response"
    health_status=1
  fi
else
  health_status=1
fi

# Overall status
if [ $pg_status -eq 0 ] && [ $redis_status -eq 0 ] && [ $rails_status -eq 0 ] && [ $solid_queue_status -eq 0 ] && [ $health_status -eq 0 ]; then
  log "✅ All systems are operational."
  exit 0
else
  log "❌ Some systems are not operational."
  exit 1
fi
